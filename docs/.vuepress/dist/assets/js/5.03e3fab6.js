(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{202:function(n,a,e){n.exports=e.p+"assets/img/hook.a0dda6e0.png"},227:function(n,a,e){"use strict";e.r(a);var o=e(28),t=Object(o.a)({},(function(){var n=this,a=n.$createElement,o=n._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("h3",{attrs:{id:"tapable-提供webpack中plugin的事件流的库。"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tapable-提供webpack中plugin的事件流的库。"}},[n._v("#")]),n._v(" tapable: 提供webpack中plugin的事件流的库。")]),n._v(" "),o("h4",{attrs:{id:"功能说明"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#功能说明"}},[n._v("#")]),n._v(" 功能说明")]),n._v(" "),o("ul",[o("li",[n._v("通过tap|tapAsync|tapPromise来提供事件的注册功能")]),n._v(" "),o("li",[n._v("通过call|callAsync|promise来触发注册的事件")]),n._v(" "),o("li",[n._v("通过实例化hook时候指定参数，参数可以传入到注册事件的函数参数中。")])]),n._v(" "),o("h4",{attrs:{id:"hook的分类"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hook的分类"}},[n._v("#")]),n._v(" hook的分类")]),n._v(" "),o("ul",[o("li",[n._v("根据同步异步执行方式，分为同步异步hook")]),n._v(" "),o("li",[n._v("根据事件执行功能分为：normal-hook，事件之间没关系，bail-hook，事件返回不为undefined则退出，waterFall-hook，上一次执行的结果会传递到下一个事件的入参。\n"),o("img",{attrs:{src:e(202),alt:"An image"}})])]),n._v(" "),o("h4",{attrs:{id:"synchook：同步hook"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#synchook：同步hook"}},[n._v("#")]),n._v(" SyncHook：同步hook")]),n._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[n._v("  const {SyncHook} = require('tapable')\n  let hook = new SyncHook([name, age])\n  hook.tap('test', function(name,age) {\n    console.log(name,age)\n  })\n  hook.call('hjd', '28')\n  hook.callPromise('hjd', 28, function() {console.log('success')})\n  hook.promise('hjd', 28).then(() => {console.log('success)\n")])])]),o("h4",{attrs:{id:"syncbailhook-同步保险hook-有一个事件的返回值不为undefined则退出整个事件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#syncbailhook-同步保险hook-有一个事件的返回值不为undefined则退出整个事件"}},[n._v("#")]),n._v(" SyncBailHook: 同步保险hook(有一个事件的返回值不为undefined则退出整个事件)")]),n._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[n._v("  let bailHook = new SyncBailHook(['aaa'])\n  bailHook.tap('1', function(name) {\n    console.log('1', name,)\n    return 0\n  })\n  bailHook.tap('2', function(name) {\n    console.log(2, name)\n  })\n  bailHook.call('888')\n  bailHook.callAsync('555', function() {\n    console.log('success')\n  })\n")])])]),o("h4",{attrs:{id:"syncwaterhook-同步水流hook-每个事件返回的值如果不为undefined则会传递到下一个事件的第一个参数中"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#syncwaterhook-同步水流hook-每个事件返回的值如果不为undefined则会传递到下一个事件的第一个参数中"}},[n._v("#")]),n._v(" SyncWaterHook: 同步水流hook(每个事件返回的值如果不为undefined则会传递到下一个事件的第一个参数中)")]),n._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[n._v("let syncwater = new SyncWaterfallHook(['name', 'age'])\nsyncwater.tap('1', function(name,age) {\n  console.log(1, name, age)\n  return false\n})\nsyncwater.tap('2', function(name, age) {\n  console.log(2, name, age)\n})\nsyncwater.call('hjd', 29)\nsyncwater.callAsync('test',26, function() {\n  console.log('success')\n})\nsyncwater.promise('hehe', 10).then(() => {\n  console.log('ok')\n})\n")])])]),o("h3",{attrs:{id:"异步串行钩子-绑定的事件可以是异步的或者同步的，异步的话通过done执行下一个事件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#异步串行钩子-绑定的事件可以是异步的或者同步的，异步的话通过done执行下一个事件"}},[n._v("#")]),n._v(" 异步串行钩子(绑定的事件可以是异步的或者同步的，异步的话通过done执行下一个事件)")]),n._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[n._v("  queue.tap('tap2', function(name) {\n  console.log(name, 't2')\n})\n\nqueue.tap('1', function(name) {\n  console.log(name, 't1')\n})\nqueue.tapAsync('1', function(name,done) {\n  setTimeout(function() {\n    console.log(1)\n    done()\n  }, 2000)\n})\nqueue.tapAsync('2', function(name,done) {\n  setTimeout(function() {\n    console.log(2)\n    done()\n  }, 1000)\n})\nqueue.tap('a', function(name) {\n  console.log(name, 't3')\n})\nqueue.callAsync('hjd',() => {\n  console.log('async完成')\n})\n")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);