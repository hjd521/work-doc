(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{211:function(s,t,e){"use strict";e.r(t);var n=e(28),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"promise的基础实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise的基础实现"}},[s._v("#")]),s._v(" promise的基础实现")]),s._v(" "),e("ul",[e("li",[s._v("promise是一个class，接收一个函数作为参数，并且参数函数可以调用resolve，reject方法来执行对应的成功回调以及失败回调。")])]),s._v(" "),e("h3",{attrs:{id:"实现步骤："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现步骤："}},[s._v("#")]),s._v(" 实现步骤：")]),s._v(" "),e("ol",[e("li",[s._v("定义class Promise")]),s._v(" "),e("li",[s._v("初始化promise内部状态status，初始化成功回调fullfills，初始化失败回调fails，")]),s._v(" "),e("li",[s._v("初始化成功时候的值value，失败的值reason，")]),s._v(" "),e("li",[s._v("定义resolve，判断status的状态为pending才继续执行，赋值value，更改状态，执行成功回调")]),s._v(" "),e("li",[s._v("定义reject，同上pending才执行，赋值reason,更改状态，执行失败回调")]),s._v(" "),e("li",[s._v("执行传入的函数fn，并且传入resolve，reject")])]),s._v(" "),e("h3",{attrs:{id:"对应的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对应的问题"}},[s._v("#")]),s._v(" 对应的问题")]),s._v(" "),e("ul",[e("li",[s._v("promise中的状态一旦确定了就不能改变了是如何实现的？")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("let status = {\n  pending: 'PENDING',\n  fullfilled: 'FULLFILLED'，\n  failed: 'FAILED'\n}\nclass Promise() {\n  constructor(fn) {\n    this.status = status.pending\n    this.reason = ''\n    this.value = ''\n    this.fullfills = []\n    this.fails = []\n    const resolve = (value) => {\n      if (this.status === status.pending) {\n        this.value = value\n        this.status = status.fullfilled\n        this.fullfills.forEach((fn) => {\n          fn(value)\n        })\n      }\n    }\n    const reject = (value) => {\n      if (this.status === status.pending) {\n        this.reason = value\n        this.status = status.failed\n        this.fails.forEach((fn) => {\n          fn(value)\n        })\n      }\n    }\n    try {\n      fn(resolve, reject)\n    } catch(err) {\n      reject(err)\n    }\n  }\n}\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);